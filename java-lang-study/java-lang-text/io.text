- I/O 스트림 문법(com.eomcs.io)
  # ex01: 파일시스템 개요 및 File 클래스 사용법
    #Exam011*(폴더 정보 조회)
      - File 클래스는 디렉토리나 파일을 다룰 때 사용하는 클래스이다.
      - 디렉토리나 파일을 생성, 변경, 삭제할 수 있다.
        현재 디렉토리를 조회
        => '.' 으로 표현한다.
        => JVM을 실행하는 위치가 현재 폴더이다.
        => 이클립스 : 프로젝트 디렉토리를 가리킨다.
        => 콘솔 : 현재 명령어를 실행하는 위치를 가리킨다.
      - 상위 폴더 조회: '..'으로 표현한다.
      - 존재하지 않는 폴더를 조회
        => 존재하지 않는 폴더인 경우 폴더의 크기는 0이다.
        => 존재하지 않는 폴더인 경우 정보를 알아낼수 없으므로 폴더인지 파일인지 여부는 무조건 false이다.
    #Exam021*(파일 정보 조회)
      - 파일정보는 폴더 정보와 똑같이 File에 파라 미터로 경로를 지정해주면 된다.
       => 존재하지 않는 파일이나 폴더인 경우 크기를 알아낼수 없다.
       => 존재하지 않는 파일이나 폴더인 경우 정보를 알아 낼수 없다. 모두 false이다.
    #Exam011*,0210* 결론
      - 먼저 파라미터에 잇는것이 파일인지 폴더인지 조회를 통해서 파일인지 폴더인지 확인하고 둘다 false인경우는 존재하지 않는 폴더나 파일이라고 판단한다.
    #Exam031*
      - 디렉토리 생성
        => 생성할 디렉토리 경로 설정
        => 폴더 경로를 지정하지 않으면 현재 폴더를 의미한다.
        => 이클립스에서는 현재 디렉토리는 프로젝트 경로를 말한다.
        => 이미 생성된 폴더라면 생성할수 없다.
        => mkdir()메서드를 통해 생성한다.
      - 하위 디렉토리생성
        => 현재 존재하는 폴더가 잇으면 그 폴더 밑으로 경로를 지정해 주면 폴더를 생성할수잇다.
      - 하위 디렉토리 생성
        => 존재하지 않는 폴더에서 하위 디렉토리 생성하기
        => 존재하지 않는 폴더가 자동 생성되지 않는다.
        => 따라서 그 하위 폴더를 생성할수 없다.
      - 하위 디렉토리 생성
        => 디렉토리를 생성할 때 존재하지 않는 중간 디렉토리도 만들고 싶다면,
        => mkdirs()메서드를 호출하라
        => 이 메서드를 호출하면 중간에 존재하지 않는 디렉토리도 자동으로 생성해준다.
      - 디렉토리 삭제
        => delete()메서드를 호출해서 삭제할수잇다.
        => 디렉토리 안에 파일이나 다른 하위 디렉토리가 잇다면 삭제할수 없다.
        => 또한 존재하지 않는 디렉토리도 삭제할수 없다.
    #Exam041*
      - 파일 생성
        => 생성할 파일 경로를 File생성자에 파라미터로 넘겨준다.
        => createNewFile()메서드를 호출함으로서 파일을 생성할수 잇다.
        => 이미 파일이 있다면 다시 생성할수 없다.
        => 또한 해당 경로에 디렉토리가 없다면 파일을 생성할수없다.
      - 특정 폴더를 생성하여 그 폴더에 파일을 만든다.
        => 생성할 파일 경로 설정
        => 디렉토리가 존재하지 않으면 파일을 생성할수 없다.
        => 그러므로 생성하고 싶은 파일위에 폴더를 먼저 생성해줘야한다.
        => getParent()메서드를 호출해서 현재 파일에 상위 폴더에 경로를 찾아주고
        => File dir = new File(path)를 통해 그 상위에 접근해서 mkdir()메서드를 통해 폴더를 먼저 만들어 준다.
        => 위에 코드 쉽게 하는 법
        => File dir = file.getParentFile() 메서드를 통해 바로 위에 접근해주고
        dir.mkdirs()해주면 된다.
      - 파일 삭제
        => 삭제할 파일의 경로를 File생성자에 파라미터로 넘겨준다.
        => delete()메서드를 호출해서 파일을 삭제할수 잇다.
        => 존재하지 않는 파일은 삭제할 수 없다.
        => 경로가 존재하지 않으면 당연히 그 경로에 파일이 없으니까 삭제할수 없다.
    #Exam051*
      - 디렉토리에 들어 있는 파일이나 하위 디렉 토리 알아 내기
        => 1) File생성자를 통해 디렉토리에 접근하기
        => 2) 현재 폴더에 있는 파일이나 하위 디렉토리 정보 알아내기
        => 3) String[]로 값을 리턴 받을 경우 dir.list()메서드를 통해 리턴 받기
      - 디렉토리에 들어 있는 파일이나 하위 디렉 토리 알아 내기
        => 1) File생성자를 통해 디렉토리에 접근하기
        => 2) 현재 폴더에 있는 파일이나 하위 디렉토리 정보 알아내기
        => 3) File[]로 값을 리턴 받을 경우 dir.listFile()메서드를 통해 리턴 받기 
    #Exam061*
      - 디렉토리에 들어있는 파일(디렉토리) 목록을 꺼낼 때 필터 적용하기
       => FileNameFilter를 통해 필터적용해서 목록을 꺼내기
       => FileNaemFilter는 인터페이스 이다.
       => 인터페이스란? 
        => 객체 사용 규칙을 정의하는 문법이다. 인터페이스를 통해 메서드 정의와 호출시 메서드 시그니쳐에 맞게 작성하기 때문에 개발자 사이에 혼동을 줄일수 잇는 문법이다.
        => 그리고 인터페이스에 잇는 메서드들은 구현되지 않은 메서드 추상메서드 들이여서 클래스 생성시 메서드 재정의를 강요받는다.
       => FileNameFilter는 list()메서드에서 호출된다.
      - 현재 파일이 파일인지 폴더인지 구별하는 코드를 FileNameFilter에 넣어주면 파일인지 폴더인지 까지 구분해서 목록을 뽑아내준다.
      - FileFilter를 통해 목록을 꺼낼때 필터 적용하기
        => FileFilter도 FileNaemFilter와 마찬가지로 인터페이스 이다.
        => 이 메서드는 listFile() 메서드에서 호출한다.
      

        
